server:
  port: 8091
  servlet:
    context-path: /api/public
management:
  server:
    port: 8190
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'

spring:
  datasource:
#    url: jdbc:postgresql://localhost:5433/postgres?currentSchema=public_info
    url: jdbc:postgresql://host.docker.internal:5433/postgres
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      mode: always

  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yaml
    enabled: true
    default-schema: public_info
    liquibase-schema: public_info
    user: postgres
    password: password
    drop-first: false
    contexts: init
  application:
    name: public-info-app
  kafka:
    trusted-packages: com.bank.public-info.dto
#    bootstrap-servers: localhost:9092
    bootstrap-servers: 192.168.31.54:9092 # IPv4-адрес: 192.168.31.54 (локальная машина)
    topics:
      error-log:
        name: public-info.error-logs
        partitions: 1
        replication-factor: 1
      license:
        create:
          name: public-info.license.create
          partitions: 1
          replication-factor: 1
        update:
          name: public-info.license.update
          partitions: 1
          replication-factor: 1
        delete:
          name: public-info.license.delete
          partitions: 1
          replication-factor: 1
        get:
          name: public-info.license.get
          partitions: 1
          replication-factor: 1
      certificate:
        create:
          name: public-info.certificate.create
          partitions: 1
          replication-factor: 1
        update:
          name: public-info.certificate.update
          partitions: 1
          replication-factor: 1
        delete:
          name: public-info.certificate.delete
          partitions: 1
          replication-factor: 1
        get:
          name: public-info.certificate.get
          partitions: 1
          replication-factor: 1
      bank:
        create:
          name: public-info.bank.create
          partitions: 1
          replication-factor: 1
        update:
          name: public-info.bank.update
          partitions: 1
          replication-factor: 1
        delete:
          name: public-info.bank.delete
          partitions: 1
          replication-factor: 1
        get:
          name: public-info.bank.get
          partitions: 1
          replication-factor: 1
      branch:
        create:
          name: public-info.branch.create
          partitions: 1
          replication-factor: 1
        update:
          name: public-info.branch.update
          partitions: 1
          replication-factor: 1
        delete:
          name: public-info.branch.delete
          partitions: 1
          replication-factor: 1
        get:
          name: public-info.branch.get
          partitions: 1
          replication-factor: 1
      atm:
        create:
          name: public-info.atm.create
          partitions: 1
          replication-factor: 1
        update:
          name: public-info.atm.update
          partitions: 1
          replication-factor: 1
        delete:
          name: public-info.atm.delete
          partitions: 1
          replication-factor: 1
        get:
          name: public-info.atm.get
          partitions: 1
          replication-factor: 1


    consumer:
      group-id: history-group
      properties:
        security:
          protocol: PLAINTEXT
        sasl:
          enable: false
        ssl:
          enable: false
        retries:
          max: 3
        acks:
          all: true


logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
