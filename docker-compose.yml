#version: '3.7'
networks:
  kafka-net:
    name: kafka-net
    driver: bridge

services:
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: "no"
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    hostname: kafka
    networks:
      - kafka-net
    ports:
      - "9092:9092"      # Внешний порт для клиентов
      - "29092:29092"    # Внутренний порт для брокеров
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"

      # Настройки listeners
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://host.docker.internal:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

      # Дополнительные настройки
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

#      # Настройки для работы с хоста
#      KAFKA_ADVERTISED_HOST_NAME: kafka
    depends_on:
      - zookeeper


  jenkins:
    image: jenkins/jenkins
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - JENKINS_ADMIN_ID=admin
      - JENKINS_ADMIN_PASSWORD=password
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    restart: unless-stopped



  bank-db:
    image: postgres
    hostname: bank-db
    ports:
      - "5432:5432"
    networks:
      - kafka-net
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust


volumes:
  jenkins_home:
  postgres_data:
#  public-info-app:
#    image: doxa80/public-info-app:latest
#    container_name: info_public_114
##    build:
##      context: ./public-info
##      dockerfile: Dockerfile
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://bank-db:5432/postgres
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: password
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
#      SPRING_PROFILES_ACTIVE: local
#    networks:
#      - kafka-net
#    ports:
#      - "8091:8091"
#    depends_on:
#      - kafka
#      - bank-db

#  prometheus:
#    image: prom/prometheus:v2.35.0
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#    ports:
#      - "9090:9090"                 # http://prometheus:9090
#    depends_on:
#      - public-info-app
#
#  grafana:
#    image: grafana/grafana:latest
#    environment:
#      GF_SECURITY_ADMIN_USER: admin
#      GF_SECURITY_ADMIN_PASSWORD: admin
#    ports:
#      - "3000:3000"
#    depends_on:
#      - prometheus